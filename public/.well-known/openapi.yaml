openapi: 3.0.0
info:
  title: Weather API with Open-Meteo
  description: >
    A weather API for querying and filtering based on natural language queries and filters.
  version: 1.0.0
servers:
  - url: https://api.open-meteo.com/v1
    description: Open Meteo Weather API endpoint
paths:
  /forecast:
    get:
      summary: Get the weather forecast for a specific latitude and longitude.
      description: >
        Retrieve an hourly weather forecast and daily aggregation for a given geographical coordinate, covering up to 16 days ahead depending on the specified parameters. Get the most accurate weather data derived by blending multiple models.
        This API requires latitude and longitude parameters. Other optional parameters include elevation, hourly (a list of weather variables for hourly forecasts), daily (a list of daily weather variable aggregations), current_weather (to include current weather conditions), temperature_unit (celsius or fahrenheit), windspeed_unit (kmh, ms, mph, or kn), precipitation_unit (mm or inch), timeformat (iso8601 or unixtime), timezone (any valid time zone name or auto for automatic resolution based on coordinates), past_days (0-2 for including past weather data), forecast_days (0-16 for the number of forecast days to return), start_date and end_date (the time interval for weather data), models (manual selection of weather models), and cell_selection (grid-cell selection preference: land, sea, or nearest).
        For example, to get an hourly forecast with temperature (in Fahrenheit) and humidity variables for latitude 52.52 and longitude 13.419, make a request like this:

        ```
        GET /v1/forecast?latitude=52.52&longitude=13.419&hourly=temperature_2m,relativehumidity_2m&temperature_unit=fahrenheit
        ```
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
          description: The latitude WGS84 coordinate of the location.
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            format: double
          description: The longitude WGS84 coordinate of the location.
        - name: elevation
          in: query
          schema:
            type: number
            format: double
          description: >
            The elevation used for statistical downscaling.
            Per default, a 90 meter digital elevation model is used.
            Set elevation to 'nan' to disable downscaling.
        - name: hourly
          in: query
          schema:
            type: array
            items:
              type: string
          description: >
            A list of weather variables to be returned in hourly forecasts.
            Comma separated values or multiple &hourly= parameter can be used.
        - name: daily
          in: query
          schema:
            type: array
            items:
              type: string
          description: >
            A list of daily weather variable aggregations to be returned.
            Comma separated values or multiple &daily= parameter can be used.
        - name: current_weather
          in: query
          schema:
            type: boolean
            default: false
          description: Include current weather conditions in the JSON output.
        - name: temperature_unit
          in: query
          schema:
            type: string
            enum:
              - celsius
              - fahrenheit
            default: celsius
          description: The unit in which temperature values are returned.
        - name: windspeed_unit
          in: query
          schema:
            type: string
            enum:
              - kmh
              - ms
              - mph
              - kn
            default: kmh
          description: The unit in which wind speed values are returned.
        - name: precipitation_unit
          in: query
          schema:
            type: string
            enum:
              - mm
              - inch
            default: mm
          description: The unit in which precipitation values are returned.
        - name: timeformat
          in: query
          schema:
            type: string
            enum:
              - iso8601
              - unixtime
            default: iso8601
          description: The format in which time values are returned.
        - name: timezone
          in: query
          schema:
            type: string
            default: GMT
            example: Europe/Berlin
          description: >
            The timezone to be applied to returned timestamps.
            Use 'auto' to resolve the coordinates to the local timezone automatically.
        - name: past_days
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 2
            default: 0
          description: Include yesterday or the day before yesterday's data in the output.
        - name: forecast_days
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 16
            default: 7
          description: Number of days of forecast to be returned, up to 16 days.
        - name: start_date
          in: query
          schema:
            type: string
            format: date
            example: "2022-06-30"
          description: The start date for the weather data retrieval in the format 'yyyy-mm-dd'.
        - name: end_date
          in: query
          schema:
            type: string
            format: date
            example: "2022-07-15"
          description: The end date for the weather data retrieval in the format 'yyyy-mm-dd'.
        - name: models
          in: query
          schema:
            type: array
            items:
              type: string
          description: >
            Manually select one or more weather models.
            Per default, the best suitable weather models will be combined.
        - name: cell_selection
          in: query
          schema:
            type: string
            enum: [land, sea, nearest]
            default: land
          description: >
            Set a preference for how grid-cells are selected.
            Default 'land' finds a suitable grid-cell on land with similar elevation.
            'sea' prefers grid-cells on sea.
            'nearest' selects the nearest possible grid-cell.
      responses:
        "200":
          description: >
            A JSON hourly weather forecast for 7 days starting at 0:00 of the
            current day containing 168 hours.
          content:
            application/json:
              schema:
                type: object
                properties:
                  latitude:
                    type: number
                    format: double
                    example: 52.52
                  longitude:
                    type: number
                    format: double
                    example: 13.419
                  elevation:
                    type: number
                    format: double
                    example: 44.812
                  # Other response properties are omitted for brevity.
        "400":
          description: Bad Request. An error occurred while processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  reason:
                    type: string
                    example: "Cannot initialize WeatherVariable from invalid String value tempeture_2m for key hourly"
  /archive:
    get:
      summary: "Historical Weather Data"
      description: |-
        Retrieve historical weather data for a specific location and time period by providing the necessary parameters:

        Required geographical coordinates (latitude and longitude)
        Required time intervals (start_date and end_date)
        Optional hourly weather variables (hourly)
        Optional daily weather variable aggregations (daily)
        Optional elevation for statistical downscaling (elevation)
        Optional timezone (timezone)
        Example usage:
        /v1/archive?latitude=52.52&longitude=13.419&start_date=2022-07-01&end_date=2022-07-02&hourly=temperature_2m,relativehumidity_2m&daily=temperature_2m_max,temperature_2m_min&timezone=auto
      parameters:
        - in: query
          name: latitude
          required: true
          schema:
            type: number
            format: float
          description: "Geographical WGS84 coordinate latitude of the location."
        - in: query
          name: longitude
          required: true
          schema:
            type: number
            format: float
          description: "Geographical WGS84 coordinate longitude of the location."
        - in: query
          name: elevation
          required: false
          schema:
            type: number
            format: float
          description: "The elevation used for statistical downscaling. Per default, a 90-meter digital elevation model is used. You can manually set the elevation to correctly match mountain peaks. If &elevation=nan is specified, downscaling will be disabled and the API uses the average grid-cell height."
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: "yyyy-mm-dd"
          description: "The start date for the time interval to get weather data. A day must be specified as an ISO8601 date (e.g., 2022-12-31)."
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: "yyyy-mm-dd"
          description: "The end date for the time interval to get weather data. A day must be specified as an ISO8601 date (e.g., 2022-12-31)."
        - in: query
          name: hourly
          required: false
          schema:
            type: array
            items:
              type: string
          description: |-
            A list of hourly weather variables which should be returned.
            Values can be comma-separated, or multiple &hourly= parameters in the URL can be used.
            Example: `hourly=temperature_2m,relativehumidity_2m`
        - in: query
          name: daily
          required: false
          schema:
            type: array
            items:
              type: string
          description: |-
            A list of daily weather variable aggregations which should be returned.
            Values can be comma-separated, or multiple &daily= parameters in the URL can be used.
            Example: `daily=temperature_2m_max,temperature_2m_min`
        - in: query
          name: timezone
          schema:
            type: string
            default: "GMT"
          description: |-
            If timezone is set, all timestamps are returned as local-time and data is returned starting at 00:00 local-time.
            Any time zone name from the time zone database is supported.
            If auto is set as a time zone, the coordinates will be automatically resolved to the local time zone.

      responses:
        "200":
          description: "Historical weather data successfully retrieved."
          content:
            application/json:
              schema:
                type: object
                properties:
                  latitude:
                    type: number
                    format: float
                    description: "WGS84 latitude of the center of the weather grid-cell used to generate this forecast."
                  longitude:
                    type: number
                    format: float
                    description: "WGS84 longitude of the center of the weather grid-cell used to generate this forecast."
                  # Other properties omitted for brevity
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    description: "Indicates an error occurred."
                  reason:
                    type: string
                    description: "The reason for the error."
